// foxy/ui/ui.js

import { services, emoji } from "../core/services.js";
import { addMessage, clearButtons, getReactions } from "./dom.js";

/**
 * –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥ –∫–Ω–æ–ø–∫–∞–º–∏
 * @param {Function} onClick ‚Äî callback –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —É—Å–ª—É–≥–∏
 */
export function renderServiceList(onClick) {
  clearButtons();
  addMessage(`${emoji()} –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:`);

  const reactions = getReactions();
  if (!reactions) return;
  const wr = document.createElement("div");
  wr.className = "flex gap-2 flex-wrap";

  Object.keys(services).forEach(name => {
    const display = capitalize(name);
    const key = name.toLowerCase();
    const btn = document.createElement("button");
    btn.textContent = display;
    btn.className = "bg-gray-200 text-black px-3 py-1 rounded-xl text-sm";
    btn.onclick = () => onClick(key);
    wr.appendChild(btn);
  });

  reactions.appendChild(wr);
}

/**
 * –ö–Ω–æ–ø–∫–∏ –∑–∞–ø–∏—Å–∏ ‚Äî –æ—Ç–∫—Ä—ã—Ç—å DIKIDI –∏–ª–∏ Telegram
 */
export function renderBookingOptions() {
  clearButtons();
  addMessage(`${emoji()} –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:`);

  const reactions = getReactions();
  if (!reactions) return;

  addMessage("üìÖ –ß–µ—Ä–µ–∑ DIKIDI ‚Äî —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—à—å –≤—Ä–µ–º—è:");
  const dikidiBtn = document.createElement("button");
  dikidiBtn.textContent = "–û—Ç–∫—Ä—ã—Ç—å DIKIDI";
  dikidiBtn.className = "bg-pink-600 text-white px-3 py-1 rounded-xl text-sm";
  dikidiBtn.onclick = () => window.open("https://dikidi.net/1456370?p=2.pi-po-ssm&o=7", "_blank");
  reactions.appendChild(dikidiBtn);

  addMessage("üí¨ –ò–ª–∏ —á–µ—Ä–µ–∑ Telegram:");
  const tgBtn = document.createElement("button");
  tgBtn.textContent = "–°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram";
  tgBtn.className = "bg-blue-600 text-white px-3 py-1 rounded-xl text-sm";
  tgBtn.onclick = () => window.open("https://t.me/foxold_a", "_blank");
  reactions.appendChild(tgBtn);
}

/**
 * –†–µ–Ω–¥–µ—Ä —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫-—Ä–µ–∞–∫—Ü–∏–π
 * @param {Array<{text: string, callback: Function}>} options
 */
export function renderReactions(options = []) {
  clearButtons();
  const reactions = getReactions();
  if (!reactions) return;

  options.forEach(opt => {
    const btn = document.createElement("button");
    btn.textContent = opt.text;
    btn.className = "ai-btn";
    btn.addEventListener("click", opt.callback);
    reactions.appendChild(btn);
  });
}
