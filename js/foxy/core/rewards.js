// core/rewards.js
import { addMessage } from "../ui/dom.js";

export function addLoyaltyPoints(count = 100) {
  const today = new Date().toISOString().slice(0, 10);
  const lastBonus = localStorage.getItem("foxy_bonusDate");

  if (lastBonus === today) {
    addMessage("ü¶ä –Ø —É–∂–µ –Ω–∞—á–∏—Å–ª—è–ª–∞ –±–∞–ª–ª—ã —Å–µ–≥–æ–¥–Ω—è üòä");
    return false;
  }

  const current = parseInt(localStorage.getItem("foxy_points") || "0");
  const updated = current + count;

  localStorage.setItem("foxy_points", updated.toString());
  localStorage.setItem("foxy_bonusDate", today);

  addMessage(`‚≠ê –ù–∞—á–∏—Å–ª–µ–Ω–æ ${count} –±–∞–ª–ª–æ–≤!\n–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è ${updated} –±–∞–ª–ª–æ–≤.`);
  return true;
}



export function showCurrentPoints() {
  const points = parseInt(localStorage.getItem("foxy_points") || "0");
  const percent = Math.min((points / 100) * 5, 20).toFixed(1);
  const discount = percent >= 5 ? `${percent}% —Å–∫–∏–¥–∫–∏` : "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–∫–∏–¥–∫–∏";

  const word = getPlural(points, ["–±–∞–ª–ª", "–±–∞–ª–ª–∞", "–±–∞–ª–ª–æ–≤"]);

  addMessage(`‚≠ê –£ —Ç–µ–±—è ${points} ${word}.\n${discount} –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —É—Å–ª—É–≥—É.`);
}

function getPlural(n, forms) {
  const mod10 = n % 10, mod100 = n % 100;
  if (mod10 === 1 && mod100 !== 11) return forms[0];
  if (mod10 >= 2 && mod10 <= 4 && (mod100 < 10 || mod100 >= 20)) return forms[1];
  return forms[2];
}

const validCodes = ["AB94", "FOXY22", "HAPPY100", "SUMMER5"];

export function redeemCode(code) {
  const trimmed = code.trim().toUpperCase();
  const used = JSON.parse(localStorage.getItem("foxy_usedCodes") || "[]");

  if (!validCodes.includes(trimmed)) {
    addMessage("‚ùå –¢–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ—Ç ‚Äî –ø—Ä–æ–≤–µ—Ä—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ!");
    return;
  }

  if (used.includes(trimmed)) {
    addMessage("‚ö†Ô∏è –≠—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è.");
    return;
  }

  used.push(trimmed);
  localStorage.setItem("foxy_usedCodes", JSON.stringify(used));

  addLoyaltyPoints(100);
}
