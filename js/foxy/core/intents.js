// foxy/core/intents.js

import { normalize } from "./utils.js";

const intentMatchers = {
  greeting:        ["привет", "хай", "здравствуй", "здарова", "ку", "прив", "добрый день", "доброе утро", "вечер добрый"],
  design:          ["дизайн", "рисунок", "узор", "пример", "вдохновение", "покажи идеи", "варианты"],
  confirmBooking:  ["запиши", "хочу записаться", "давай запишемся", "можно записаться", "хочу прийти"],
  showSomething:   ["покажи", "посмотреть", "что входит", "что есть", "варианты", "что предлагаешь", "уточни"],
  confirm:         ["да", "ага", "ок", "хорошо", "точно", "давай", "ясно", "понятно"],
  abilities:       ["что ты умеешь", "что можешь", "что умеешь", "расскажи о себе", "твои функции"],
  booking:         ["запись", "записаться", "забронировать", "где записаться", "как попасть", "хочу записаться"],
  mood:            ["настроение", "подбери", "что подойдет", "по настроению", "нюд", "кошачий глаз", "втирка", "блёстки", "глиттер", "сделай красиво"],
  thanks:          ["спасибо", "благодарю", "благодарен", "спасибки"],
  bye:             ["пока", "до свидания", "до встречи", "увидимся", "прощай", "бай"],
  smalltalkLite:   ["как дела", "чем занимаешься", "что нового", "как ты"],
  softWarning:     ["заткнись", "заткнись уже", "хватит", "не говори так"],
  styleTalk:       ["что модно", "тренды", "в моде", "модно", "актуально"],
  about:           ["кто ты", "ты кто", "что ты такое", "расскажи кто ты"],
  showServices:    ["услуги", "маникюр", "цены", "прайс", "что делаешь"],
  help:            ["помоги", "не понимаю", "не знаю", "выбери за меня", "что выбрать"]
};

export function matchIntent(input) {
  const normalized = normalize(input);
  const words = normalized.split(/\s+/);

  for (const [intent, patterns] of Object.entries(intentMatchers)) {
    for (const rawPattern of patterns) {
      const pattern = normalize(rawPattern);

      if (pattern.includes(" ")) {
        // многословные фразы ищем просто как подстроку
        if (normalized.includes(pattern)) {
          return intent;
        }
      } else {
        // одиночные слова ищем по точному совпадению среди разобранных слов
        if (words.includes(pattern)) {
          return intent;
        }
      }
    }
  }

  return null;
}
