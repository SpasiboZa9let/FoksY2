import { matchIntent } from "../core/intents.js";
import { matchService, emoji, services, randomReply } from "../core/services.js";
import {
  lastInput, setLastInput, setLastIntent,
  lastIntent, setLastService, lastService,
  setUserName
} from "../core/state.js";

import { addMessage, clearButtons } from "../ui/dom.js";
import { renderBookingOptions, renderServiceList } from "../ui/ui.js";

import { handleDesign } from "./design.js";
import { handleMood } from "./mood.js";
import { handleSmalltalk } from "./smalltalk.js";
import { handleServiceInput } from "./servicesHandler.js";

// –≥–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞
export function handleUserInput(message) {
  clearButtons();

  // üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (lastIntent === "askName") {
    const name = message.trim();
    setUserName(name);
    localStorage.setItem("foxy_userName", name);
    addMessage(`–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ${name}! üíñ`, false);
    renderServiceList(); // –∏–ª–∏ showSuggestions()
    setLastIntent(null);
    return;
  }

  const input = message.trim().toLowerCase();
  if (!input || input === lastInput) return;
  setLastInput(input);

  addMessage(`–í—ã: ${message}`);

  // ü§ñ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–Ω—Ç–µ–Ω—Ç–∞
  const intent = matchIntent(input);
  setLastIntent(intent);

  // ü¶ä Smalltalk-–∏–Ω—Ç–µ–Ω—Ç—ã
  if (handleSmalltalk(intent)) return;

  // üóÇ –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥–∏ –∏–ª–∏ ¬´–ø–æ–∫–∞–∂–∏¬ª
  if (intent === "showSomething" || intent === "showServices") {
    const svc2 = matchService(input);
    if (svc2) {
      setLastService(svc2.name);
      setLastIntent("service");
      handleServiceInput(svc2.name);
    } else {
      renderServiceList();
    }
    return;
  }

  // üîç –£—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã (—Ü–µ–Ω–∞, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ–ø–µ—á–∞—Ç–∫–∏)
  const inquireRe = /(—Å–∫–æ–ª—å–∫–æ|—Å–∫–æ–ª–∫[–æ—å—è]|—Å—Ç–æ–∏–º–æ—Å—Ç|—Ü–µ–Ω–∞)/i;
  if (inquireRe.test(input)) {
    const svc2 = matchService(input);
    if (svc2) setLastService(svc2.name);

    if (lastService && services[lastService]) {
      addMessage(`${emoji()} ${randomReply("inquireDetails")}`, true);
      addMessage(`¬´${lastService}¬ª üíÖ\n${services[lastService]}`);
      renderBookingOptions();
    } else {
      addMessage(randomReply("fallback"));
      renderServiceList();
    }
    return;
  }

  // üîé –ü–æ–ø—ã—Ç–∫–∞ —É–≥–∞–¥–∞—Ç—å —É—Å–ª—É–≥—É –Ω–∞–ø—Ä—è–º—É—é
  const svc = matchService(input);
  if (svc) {
    setLastService(svc.name);
    setLastIntent("service");
    handleServiceInput(svc.name);
    return;
  }

  // üéØ –û—Å—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ–Ω—Ç—ã
  switch (intent) {
    case "design":
      handleDesign();
      break;
    case "mood":
      handleMood();
      break;
    case "booking":
    case "confirmBooking":
      renderBookingOptions();
      break;
    default:
      addMessage(randomReply("fallback"));
      renderServiceList();
  }
}
