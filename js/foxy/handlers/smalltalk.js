import { emoji } from "../core/services.js";
import { addMessage, renderReactions } from "../ui/dom.js";
import { renderServiceList, renderBookingOptions } from "../ui/ui.js";
import { handleDesign } from "./design.js";
import { handleUserInput } from "./mainHandler.js";
import { randomSmalltalk } from "../core/phrases.js";

export function handleSmalltalk(intent) {
  if (!intent) return false;

  const handlers = {
    greeting:      () => addMessage(randomSmalltalk("greeting")),
    smalltalkLite: () => addMessage(randomSmalltalk("smalltalkLite")),
    thanks:        () => addMessage(randomSmalltalk("thanks")),
    bye:           () => addMessage(randomSmalltalk("bye")),
    mood:          () => addMessage(randomSmalltalk("mood")),
    softWarning:   () => addMessage("üß∏ –•–æ—á—É –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤–µ–∂–ª–∏–≤–æ–π. –î–∞–≤–∞–π –≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ-–¥–æ–±—Ä–æ–º—É?"),
    compliment: () => addMessage(randomSmalltalk("compliment")),
    joke: () => addMessage(randomSmalltalk("joke")),
    weather: () => addMessage(randomSmalltalk("weather")),
    question: () => addMessage(randomSmalltalk("question")),
  
    abilities: () => {
  addMessage(`
ü¶ä –Ø —É–º–µ—é:
‚Äî –ª–æ–≤–∏—Ç—å —Ç–≤–æ–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –∏ –æ—Ç–≤–µ—á–∞—Ç—å —Å —Ç–µ–ø–ª–æ–º üíñ
‚Äî —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å —à—É—Ç–∫–∏ –∏ –ø–æ–¥–Ω–∏–º–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ üòÑ
‚Äî –≥–æ–≤–æ—Ä–∏—Ç—å –æ –ø–æ–≥–æ–¥–µ –∏ –¥–µ–ª–∏—Ç—å—Å—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º ‚òÄÔ∏è‚ùÑÔ∏è
‚Äî –ø–æ–º–æ–≥–∞—Ç—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏ üíÖ
‚Äî –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–¥–µ–∏ –¥–∏–∑–∞–π–Ω–∞ üé®
‚Äî —Å—á–∏—Ç–∞—Ç—å —Å–∫–∏–¥–∫–∏ –∏ –±–æ–Ω—É—Å—ã ‚≠ê
‚Äî –ø—Ä–æ—Å—Ç–æ –±–æ–ª—Ç–∞—Ç—å, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è üòä

–í—ã–±–∏—Ä–∞–π, —á—Ç–æ —Ö–æ—á–µ—à—å, –∏ –∂–º–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá
  `, false, false, "foxy-abilities"); // ‚Üê –∑–¥–µ—Å—å –¥–æ–±–∞–≤–ª–µ–Ω –∫–ª–∞—Å—Å

  renderReactions([
    { text: "üíÖ –ü—Ä–∞–π—Å",        callback: () => renderServiceList() },
    { text: "üé® –î–∏–∑–∞–π–Ω",       callback: () => handleDesign() },
    { text: "üìÖ –ó–∞–ø–∏—Å—å",       callback: () => renderBookingOptions() },
    { text: "‚≠ê –ú–æ–∏ –±–∞–ª–ª—ã",    callback: () => handleUserInput("–±–∞–ª–ª—ã") },
    { text: "üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",  callback: () => handleUserInput("–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä") },
    { text: "üéâ –Ø —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–∞", callback: () => handleUserInput("—É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–∞") },
    { text: "‚ùì –ü–æ–º–æ—â—å",       callback: () => handleUserInput("–ø–æ–º–æ—â—å") }
  ]);
},

    about: () => {
      addMessage("ü¶ä –Ø –§–æ–∫—Å–∏ ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–¥—Ä—É–∂–∫–∞ –∏ –º–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞ üíÖ");
      renderReactions([
        { text: "‚ùì –ß—Ç–æ —è —É–º–µ—é?", callback: () => handlers.abilities() }
      ]);
    },

    confirmation: () => {
      addMessage("–°—É–ø–µ—Ä! –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º üíÖ");
      renderServiceList();
    },

    confirm: () => {
      addMessage("–û—Ç–ª–∏—á–Ω–æ! –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üíÖ");
      renderServiceList();
    }
  };

  const fn = handlers[intent];
  if (fn) {
    fn();
    return true;
  }

  return false;
}
