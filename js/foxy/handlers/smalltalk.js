// foxy/handlers/smalltalk.js

import { randomReply, emoji } from "../core/services.js";
import { addMessage, renderReactions } from "../ui/dom.js";
import { renderServiceList, renderBookingOptions } from "../ui/ui.js";
import { handleDesign } from "./design.js";

export function handleSmalltalk(intent) {
  if (!intent) return false;

  const handlers = {
    greeting:      () => addMessage(randomReply("greeting")),
    smalltalkLite: () => addMessage(randomReply("smalltalkLite")),
    thanks:        () => addMessage(randomReply("thanks")),
    bye:           () => addMessage(randomReply("bye")),
    mood:          () => addMessage(randomReply("mood")),
    softWarning:   () => addMessage("üß∏ –•–æ—á—É –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤–µ–∂–ª–∏–≤–æ–π. –î–∞–≤–∞–π –≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ-–¥–æ–±—Ä–æ–º—É?"),
    // –ó–∞–º–µ–Ω–∏–ª–∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ abilities:
    abilities: () => {
      addMessage(`${emoji()} –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:`);
      renderReactions([
        {
          text: "üíÖ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å",
          callback: () => renderServiceList()
        },
        {
          text: "üé® –ò–¥–µ–∏ –¥–∏–∑–∞–π–Ω–∞",
          callback: () => handleDesign()
        },
        {
          text: "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
          callback: () => renderBookingOptions()
        }
      ]);
    },
    help: () => {
      addMessage(`${emoji()} –Ø –ø–æ–º–æ–≥—É —Å –≤—ã–±–æ—Ä–æ–º! –í–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:`);
      renderReactions([
        { text: "üíÖ –ü—Ä–∞–π—Å",        callback: () => renderServiceList()    },
        { text: "üé® –î–∏–∑–∞–π–Ω",      callback: () => handleDesign()        },
        { text: "üìÖ –ó–∞–ø–∏—Å—å",      callback: () => renderBookingOptions() },
        { text: "‚ùì –ß—Ç–æ —è —É–º–µ—é?",  callback: () => handlers.abilities()   }
      ]);
    },
    about: () => {
      addMessage("ü¶ä –Ø –§–æ–∫—Å–∏ ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–¥—Ä—É–∂–∫–∞ –∏ –º–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞ üíÖ");
      renderReactions([
        { text: "‚ùì –ß—Ç–æ —è —É–º–µ—é?", callback: () => handlers.abilities() }
      ]);
    },
    confirmation:  () => {
      addMessage("–°—É–ø–µ—Ä! –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º üíÖ");
      renderServiceList();
    },
    confirm:       () => {
      addMessage("–û—Ç–ª–∏—á–Ω–æ! –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üíÖ");
      renderServiceList();
    }
  };

  const fn = handlers[intent];
  if (fn) {
    fn();
    return true;
  }
  return false;
}
