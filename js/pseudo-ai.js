import { handleUserInput } from './foxy/handlers/mainHandler.js';
import { addMessage } from './foxy/ui/dom.js';
import { emoji } from './foxy/core/services.js';
import { setUserName, setLastIntent } from './foxy/core/state.js';

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ (–±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è)
const fallbackGreetings = [
  `–ü—Ä–∏–≤–µ—Ç–∏–∫, –∫—Ä–∞—Å–∞–≤–∏—Ü–∞! üíñ –î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —á—Ç–æ-—Ç–æ —Å—Ç–∏–ª—å–Ω–æ–µ ‚Äî –Ω—é–¥, –±–ª—ë—Å—Ç–∫–∏ –∏–ª–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–∞—É?`,
  `–°–∞–ª—é—Ç! –Ø –§–æ–∫—Å–∏ ‚Äî —Ç–≤–æ—è –ø–æ–¥—Ä—É–∂–∫–∞ –≤ –º–∏—Ä–µ –º–∞–Ω–∏–∫—é—Ä–∞ üíÖ –°–ø—Ä–∞—à–∏–≤–∞–π, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è!`,
  `–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤–∞ —Å–¥–µ–ª–∞—Ç—å —Ç–≤–æ–∏ –Ω–æ–≥—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—ã–º–∏? üí´ –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–µ–µ ‚ú®`,
  `–•—ç–π, —Ä–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! üíñ –ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤—ã–±–µ—Ä–µ–º: –Ω–µ–∂–Ω—ã–π –Ω—é–¥ –∏–ª–∏ –±–ª–µ—Å—Ç—è—â–∏–π –∫–æ—Å–º–æ—Å?`,
  `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ª—é–±–∏–º–∫–∞! üòò –ú–∞–Ω–∏–∫—é—Ä –º–µ—á—Ç—ã —É–∂–µ —Ä—è–¥–æ–º ‚Äî —Ä–∞—Å—Å–∫–∞–∂–∏, —á–µ–≥–æ —Ö–æ—á–µ—à—å`,
  `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –§–æ–∫—Å–∏ –Ω–∞ —Å–≤—è–∑–∏ ‚Äî –¥–∞–≤–∞–π —Å–æ—Ç–≤–æ—Ä–∏–º –∫—Ä–∞—Å–æ—Ç—É –¥–ª—è —Ç–≤–æ–∏—Ö –Ω–æ–≥–æ—Ç–∫–æ–≤ üå∏`,
  `–ô–æ! –í –º–∏—Ä–µ –º–∞–Ω–∏–∫—é—Ä–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë –¥–ª—è —Ç–µ–±—è ‚Äî –≤—ã–±–∏—Ä–∞–π, —á—Ç–æ –Ω—É–∂–Ω–æ üíñ`,
  `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –•–æ—á–µ—à—å –ø—Ä–∞–π—Å, –∏–¥–µ–∏ –¥–∏–∑–∞–π–Ω–∞ –∏–ª–∏ —Å—Ä–∞–∑—É –∑–∞–ø–∏—Å—å? üìã`
];

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏–º–µ–Ω–∏
const greetingsWithName = [
  `–ü—Ä–∏–≤–µ—Ç, %NAME%! üíñ –ß–µ–º —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –Ω–æ–≥–æ—Ç–∫–∏?`,
  `–°–∞–ª—é—Ç, %NAME%! üåü –ì–æ—Ç–æ–≤–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤–º–µ—Å—Ç–µ?`,
  `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, %NAME%! ‚ú® –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º –¥–ª—è —Ç–≤–æ–µ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–∞–Ω–∏–∫—é—Ä–∞?`,
  `–•—ç–π, %NAME%! üíÖ –ì–æ—Ç–æ–≤–∞ –∫ —Å—Ç–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—é?`,
  `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %NAME%! üòä –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –Ω–æ–≥–æ—Ç–∫–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–º–∏!`
];

function randomGreeting(name = null) {
  if (name) {
    const template = greetingsWithName[Math.floor(Math.random() * greetingsWithName.length)];
    return template.replace('%NAME%', name);
  } else {
    return fallbackGreetings[Math.floor(Math.random() * fallbackGreetings.length)];
  }
}

function showSuggestions() {
  addMessage(
    `<div class="foxy-suggestions">
       <div class="description">–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:</div>
       <div class="buttons-wrapper">
         <button class="ai-btn" data-action="–ø—Ä–∞–π—Å">üíÖ –ó–∞–≥–ª—è–Ω—É—Ç—å –≤ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç</button>
         <button class="ai-btn" data-action="–¥–∏–∑–∞–π–Ω">üé® –í–¥–æ—Ö–Ω–æ–≤–∏—Ç—å—Å—è –∏–¥–µ—è–º–∏ –¥–∏–∑–∞–π–Ω–∞</button>
         <button class="ai-btn" data-action="–∑–∞–ø–∏—Å–∞—Ç—å—Å—è">üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è</button>
         <button class="ai-btn" data-action="—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å">‚ùì –£–∑–Ω–∞—Ç—å –≤—Å–µ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</button>
       </div>
       <div class="footer">–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –ø–æ –¥—É—à–µ, –∏ —è –≤—Å—ë –ø–æ–∫–∞–∂—É üíñ</div>
     </div>`,
    true
  );
}

window.addEventListener('DOMContentLoaded', () => {
  const tg = window.Telegram?.WebApp;
  let name = localStorage.getItem('foxy_userName');

  console.log('[DEBUG] DOMContentLoaded, –∏–º—è –∏–∑ localStorage:', name);

  if (!name || name.trim().length < 2) {
    console.log('[DEBUG] –ò–º—è –Ω–µ –∑–∞–¥–∞–Ω–æ, —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    addMessage('ü¶ä –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?', false);
    setLastIntent('askName');
    return;
  }

  setUserName(name);
  addMessage(
    `<strong>${emoji()} –§–æ–∫—Å–∏:</strong> ${randomGreeting(name)}`,
    true
  );
  showSuggestions();
});

// –ù–∞–≤–µ—à–∏–≤–∞–µ–º –∫–ª–∏–∫–∏ –Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏
setTimeout(() => {
  document.querySelectorAll('[data-action]').forEach(el => {
    el.addEventListener('click', () => {
      const cmd = el.getAttribute('data-action');
      if (cmd) handleUserInput(cmd);
    });
  });
}, 0);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞
const form = document.getElementById('pseudo-form');
const input = document.getElementById('pseudo-input');

form?.addEventListener('submit', e => {
  e.preventDefault();
  const text = input.value.trim();
  if (!text) return;
  handleUserInput(text);
  input.value = '';
});
